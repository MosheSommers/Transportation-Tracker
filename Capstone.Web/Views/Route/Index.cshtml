@model List<Capstone.Web.Models.Route>
@{
    ViewBag.Title = "Routes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Routes</h2>

<div id="map"></div>
<div id="right-panel">
    <div>
        <form>
            @Html.Label("RouteID", "Select A Route")
            @Html.DropDownList("RouteID",new SelectList(Model, "RouteID", "RouteName"))
            <input type="submit" id="submit">
        </form>
    </div>
    <div id="directions-panel"></div>
</div>

<script>
    function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: { lat: 41.4993, lng: -81.6944 }
        });
        directionsDisplay.setMap(map);

        document.getElementById('submit').addEventListener('click', function () {       // Change this from "submit" to "dropdown updated"
            calculateAndDisplayRoute(directionsService, directionsDisplay);
        });
    }

    function calculateAndDisplayRoute(directionsService, directionsDisplay) {

        var waypts = []

        directionsService.route({
            origin: 'Cleveland',                                       // --> Get [0] on waypoint list from active dropdown
            destination: 'Columbus',                                   // --> Get [n-1] on waypoint list from active dropdown
            waypoints: waypts,                                         // --> Get [1]-[n-2] from waypoint list from active dropdown
            optimizeWaypoints: true,
            travelMode: 'DRIVING'
        }, function (response, status) {
            if (status === 'OK') {
                directionsDisplay.setDirections(response);
                var route = response.routes[0];
                var summaryPanel = document.getElementById('directions-panel');
                summaryPanel.innerHTML = '';

                for (var i = 0; i < route.legs.length; i++) {
                    var routeSegment = i + 1;
                    summaryPanel.innerHTML += '<b>Stop: ' + routeSegment +
                        '</b><br>';
                    summaryPanel.innerHTML += route.legs[i].start_address + '<br>';
                    if (i == route.legs.length - 1) {
                        summaryPanel.innerHTML += '<b>Stop: ' + (routeSegment + 1) + '</b><br>';
                        summaryPanel.innerHTML += route.legs[i].end_address;
                    }
                }
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    }
</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC1daWs4KZZROhgz8DlBzFXdz80pSWo8Fs&callback=initMap">
</script>